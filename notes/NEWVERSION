1. I will assume that up to this point the candidate for new
release is in develop branch on the git.  Also, I will assume that we have
tested already the website to some exten,t and that the code can run all the
examples when creating the website, and that all tox tests are passing.

2. Now let us create a release branch off of develop:

  git checkout develop
  git checkout -b release/1.x.x

3. Any changes we now make to this release candidate should go to the
release/1.x.x. branch.

4a. Update __version__ variable and date in the header of pythtb.py

4b. Update version string in setup.py

4c. Update website/local/release/release.rst by specifying what is new in the
package.

4d. Add folder in website/local/release/ver_ABC for the old version of the package,
put in .tar.gz file. of the old version.
*It is enough to do this for the old version only!*
You will also have to add that folder to cvs.
To get old source file use this command:
wget http://www.physics.rutgers.edu/pythtb/_downloads/pythtb-X.X.X.tar.gz

4e. Update website/source/install.rst with the new version. It is enough to
change string "1.6.1" with "1.6.2" or similar.

4f. Update website/source/conf.py. Version number appears at two places, just
update the string.

4g. There is NO need to update src/CHANGES. We may want to remove that
file in the future.

5. We should test the website to make sure it is rendered correctly.

6. Sinisa will wait for David's confirmation that website is running well
on his end before proceeding to the next step.

7. When we are happy with polishing release/1.x.x, we should merge
it into develop and master (checking for and resolving conflicts if develop
has been changed).

8. Now I will update the code on the PyPI server.

8a. Make sure that you link ../private/.pypirc_MOVE_TO_HOME to home folder as ~/.pypirc  !
David, let me know if you don't have this file.  It contains passwords so I
don't want to keep it on github.

8b. Here are instructions for testing purposes only:

  git checkout master
  rm -rf dist
  python setup.py sdist
  twine upload dist/* -r testpypi

8c. If you wish to test the package do this,

  git checkout master
  pip install -i https://testpypi.python.org/pypi pythtb==1.x.x

8d. When you are sure that this works you can officially upload it to pypi like this.
Note that this code below should not be executed lightly! These lines will make
some changes in the pypi servers and after that it is hard to tweak things.
Therefore make sure you do all the tests you need to do first with the 
"testpypi" version!  Once you are happy with how things look like execute
lines below:

******************* BE CAREFUL WITH THIS *************************

  git checkout master
  rm -rf dist
  python setup.py sdist
  twine upload dist/* -r pypi
  
******************************************************************

9. David should now do the final update of the website from the "master" branch of git.  David,
please add here more information if needed.

