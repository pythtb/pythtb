*This is a place where I core-dump list of ideas, it is not regularly updated.*

Implement support for write_tb option from wannier90.

Potential BUG: I think that prefix_hr.dat file written by Wannier90 contains
hamiltonian in the psi-space, not u-space.  Therefore, numbers in there
should not be multiplied by exp(i tau * k) where tau is center of the Wannier
function.

_______________________

<<<<<<< TODO
When visualizing thre is problem if two orbitals are overlapping.

=======
What about having an object that represents a single band or set of
bands from a model and then you can smoothen the gauge acording to the
MV 1997 paper?


I thought about making further changes that would make it easier
and more natural to treat cases that combine k-space and
parametric directions, along these lines:
 Break wf.solve_on_grid up into a pair of functions:
 a) one creates and returns a k-space grid and a mapping of
    k-space to array-axis dimensions
 b) for a given set of parameter indices, another fills the
    corresponding k-mesh with eigenvector solutions
 Then we would rewrite wf.solve_on_grid to be a wrapper for these
 two functions that can be used as a convenience when there are
 only k-space directions.
But I didn't do anything yet.  I'm not sure how straightforward
it would be.

>>>>>>> 1.11
Have a way to force model to use only some of the atoms in the
calculation. Just take an array with indices of atoms to include and
then apply this at all points in the code.

In wf_array allow for adiabatic evolution. For example, if you start
from some set of occupied states and then crank up parameter lambda,
which states do you end up with?

Use networkX to visualize tb model? Put labels for hopping terms.

Automatic check in wf_array which checks that bands are well separated
from other bands when computing berry phases etc. Have optional
parameter which will also specify band energies. Something like
wf.energies[i,j]=eval on top of wf[i,j]=evec.

Allow to cut out arbitrary supercells, that way you could construct
arbitrary surfaces.

Use automated package testing in python. Package called "units" or
something like that.

Add spinors.

Finite sized models are hard to solve. Maybe use some algorithm
for sparse matrices? Store hopping parameters in dictionary.

Make it possible to print out a tb model in terms of cos sin and so on
that would help with debugging

It would be cool if you could specify for each edge which atoms should
be included and which ones not.

Use Pierels distortion as one of the examples.

There is a problem with runing in windows, it gives some warning.

Do density of states calculation with Gaussian broadening

Paralellize over k-points matrix diagonalization.

Have library of different tb-models that are common in the literature (Haldane etc)

Add magnetic field via Pierels substitution by enlarging the cell so the unit number of quanta pass through the cell?