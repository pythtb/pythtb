We will use  gitflow workflow as described here

https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow

*************************

Here are steps that Sinisa did once and they don't need to be done
again.

1. Sinisa created private github repository.

2. Sinisa shared private github repository with David through github
website.

3. Sinisa created develop branch and pushed it to github using the
following

  git branch develop
  git push -u origin develop

Note that "origin" in git language means github repository.

*************************

1. If say David wants to add a feature to pythtb he should first get
repositoty:

  git clone http://github.com/sinisacoh/pythtb

or, if it already in place, download updates

  git fetch; git merge    Or 'git pull' to do both at once)
  git branch -a           List of branches

2. Then David should change to the develop branch:

  git checkout develop

3. Next David should make a feature branch for the addition he wants
to do to the code

  git checkout -b feature_DESCRIPTOR

4. Now David can do whatever work he wants to do on this branch.  Say,
to add a file,

  git add FILENAME

or to submit changes to the feature branch

  git commit -m "type message here"
  git push origin feature_DESCRIPTOR

Note that if you change this file again, you need to "git add" it
again before commiting and pushing.

5. When David is done with working on the feature branch, and
it has been pushed to origin, he should create a pull request
to have it merged into the 'develop' branch.  This is done by
logging onto the GitHub website.  See

  https://help.github.com/articles/creating-a-pull-request

*** Question: If Sinisa reviews the pull request and agrees it
    is OK, how does he actually do the merge?  From the GitHub
    website?  Or from the command line?

6. The feature_DESCRIPTOR branch can now be deleted:

  git branch -d feature_DESCRIPTOR

*** Question: This works locally.  How to delete the feature_DESCRIPTOR
*** branch also on the remote at origin?  Do it from the web browser at
*** GitHub?

7. The 'master' branch should only be updated at the time of a new
release.  To update it, one of us issues a pull request for 'develop'
to be merged into 'master'.  When agreed, we do the merge.

*** Question: Again, how do we do the merge?
